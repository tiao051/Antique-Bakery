// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using highlands.Data;

#nullable disable

namespace highlands.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("highlands.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("OutTime")
                        .HasColumnType("datetime");

                    b.HasKey("AttendanceId")
                        .HasName("PK__Attendan__8B69261CE8C56896");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendance", (string)null);
                });

            modelBuilder.Entity("highlands.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64D83C502877");

                    b.HasIndex("UserId");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("highlands.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime?>("DateOfHire")
                        .HasColumnType("datetime");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04F1164043082");

                    b.HasIndex("LevelId");

                    b.HasIndex("UserId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("highlands.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__6A4BEDD64013EEB3");

                    b.HasIndex("CustomerId");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("highlands.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IngredientID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<string>("InRecipe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IngredientCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IngredientType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IngredientId")
                        .HasName("PK__Ingredie__BEAEB27AC38E192A");

                    b.HasIndex(new[] { "IngredientName" }, "UQ__Ingredie__A1B2F1CC622751A2")
                        .IsUnique();

                    b.ToTable("Ingredient", (string)null);
                });

            modelBuilder.Entity("highlands.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<string>("ItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InventoryId")
                        .HasName("PK__Inventor__F5FDE6B310FE7243");

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("highlands.Models.Level", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LevelName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LevelId")
                        .HasName("PK__Level__09F03C262716CD77");

                    b.ToTable("Level", (string)null);
                });

            modelBuilder.Entity("highlands.Models.MenuItem", b =>
                {
                    b.Property<string>("ItemName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubcategoryImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ItemName");

                    b.ToTable("MenuItem", (string)null);
                });

            modelBuilder.Entity("highlands.Models.MenuItemPrice", b =>
                {
                    b.Property<string>("ItemName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("ItemName", "Size");

                    b.ToTable("MenuItemPrice", (string)null);
                });

            modelBuilder.Entity("highlands.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("OrderId")
                        .HasName("PK__Order__C3905BCFC7AC295F");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("highlands.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<string>("ItemName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderDetailId")
                        .HasName("PK__OrderDet__D3B9D36CCBC8E7B5");

                    b.HasIndex("ItemName");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("highlands.Models.OrderInventory", b =>
                {
                    b.Property<int>("OrderInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderInventoryId"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityUsed")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftInventoryId")
                        .HasColumnType("int");

                    b.HasKey("OrderInventoryId")
                        .HasName("PK__OrderInv__6119233E131C7EBF");

                    b.HasIndex("OrderId");

                    b.HasIndex("ShiftInventoryId");

                    b.ToTable("OrderInventory", (string)null);
                });

            modelBuilder.Entity("highlands.Models.OrderPayment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaymentAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PaymentId")
                        .HasName("PK__OrderPay__9B556A38239F6466");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderPayment", (string)null);
                });

            modelBuilder.Entity("highlands.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionId"));

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PromoCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("PromotionId")
                        .HasName("PK__Promotio__52C42FCF0598FB73");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("highlands.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecipeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<int>("IngredientId")
                        .HasColumnType("int")
                        .HasColumnName("IngredientID");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RecipeId")
                        .HasName("PK__Recipe__FDD988D0C6A8C1DC");

                    b.HasIndex("IngredientId");

                    b.HasIndex("ItemName");

                    b.ToTable("Recipe", (string)null);
                });

            modelBuilder.Entity("highlands.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE1A61B4E4D7");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("highlands.Models.Salary", b =>
                {
                    b.Property<int>("SalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryId"));

                    b.Property<decimal?>("BaseSalary")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Bonus")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Deductions")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MonthYear")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TotalSalary")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("SalaryId")
                        .HasName("PK__Salary__4BE2045792994C8F");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Salary", (string)null);
                });

            modelBuilder.Entity("highlands.Models.Sale", b =>
                {
                    b.Property<int>("SalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesId"));

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SalesDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("SalesId")
                        .HasName("PK__Sales__C952FB32A5EA0565");

                    b.HasIndex("PromotionId");

                    b.HasIndex("StoreId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("highlands.Models.Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShiftId"));

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.HasKey("ShiftId")
                        .HasName("PK__Shift__C0A83881F64479A8");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Shift", (string)null);
                });

            modelBuilder.Entity("highlands.Models.ShiftInventory", b =>
                {
                    b.Property<int>("ShiftInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShiftInventoryId"));

                    b.Property<int?>("InventoryId")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.HasKey("ShiftInventoryId")
                        .HasName("PK__ShiftInv__2DCA0146D81CBAB1");

                    b.HasIndex("InventoryId");

                    b.HasIndex("ShiftId");

                    b.ToTable("ShiftInventory", (string)null);
                });

            modelBuilder.Entity("highlands.Models.StockIn", b =>
                {
                    b.Property<int>("StockInId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockInId"));

                    b.Property<int?>("InventoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StockInDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("StockInId")
                        .HasName("PK__StockIn__794DA66CC53C54D7");

                    b.HasIndex("InventoryId");

                    b.HasIndex("StoreId");

                    b.HasIndex("SupplierId");

                    b.ToTable("StockIn", (string)null);
                });

            modelBuilder.Entity("highlands.Models.StockOut", b =>
                {
                    b.Property<int>("StockOutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockOutId"));

                    b.Property<int?>("InventoryId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StockOutDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("StockOutId")
                        .HasName("PK__StockOut__C5308D7A449F24AB");

                    b.HasIndex("InventoryId");

                    b.HasIndex("StoreId");

                    b.ToTable("StockOut", (string)null);
                });

            modelBuilder.Entity("highlands.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("StoreName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StoreId")
                        .HasName("PK__Store__3B82F10127480322");

                    b.ToTable("Store", (string)null);
                });

            modelBuilder.Entity("highlands.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Contact")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SupplierId")
                        .HasName("PK__Supplier__4BE666B4D1C7FA1E");

                    b.ToTable("Supplier", (string)null);
                });

            modelBuilder.Entity("highlands.Models.TransactionHistory", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TransactionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("TransactionId")
                        .HasName("PK__Transact__55433A6B5B0D7DFA");

                    b.HasIndex("OrderId");

                    b.ToTable("TransactionHistory", (string)null);
                });

            modelBuilder.Entity("highlands.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Role")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Customer");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Local");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C8E46F69C");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("highlands.Models.Attendance", b =>
                {
                    b.HasOne("highlands.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__Attendanc__Emplo__5BE2A6F2");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("highlands.Models.Customer", b =>
                {
                    b.HasOne("highlands.Models.User", null)
                        .WithMany("Customers")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("highlands.Models.Employee", b =>
                {
                    b.HasOne("highlands.Models.Level", "Level")
                        .WithMany("Employees")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK__Employee__LevelI__5629CD9C");

                    b.HasOne("highlands.Models.User", "User")
                        .WithMany("Employees")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Employee__UserId__5535A963");

                    b.Navigation("Level");

                    b.Navigation("User");
                });

            modelBuilder.Entity("highlands.Models.Feedback", b =>
                {
                    b.HasOne("highlands.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("highlands.Models.MenuItemPrice", b =>
                {
                    b.HasOne("highlands.Models.MenuItem", "ItemNameNavigation")
                        .WithMany("MenuItemPrices")
                        .HasForeignKey("ItemName")
                        .IsRequired()
                        .HasConstraintName("FK__MenuItemP__ItemN__30C33EC3");

                    b.Navigation("ItemNameNavigation");
                });

            modelBuilder.Entity("highlands.Models.Order", b =>
                {
                    b.HasOne("highlands.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("highlands.Models.OrderDetail", b =>
                {
                    b.HasOne("highlands.Models.MenuItem", "ItemNameNavigation")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ItemName")
                        .HasConstraintName("FK_OrderDetails_MenuItem");

                    b.HasOne("highlands.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderDeta__Order__49C3F6B7");

                    b.Navigation("ItemNameNavigation");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("highlands.Models.OrderInventory", b =>
                {
                    b.HasOne("highlands.Models.Order", "Order")
                        .WithMany("OrderInventories")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderInve__Order__7C4F7684");

                    b.HasOne("highlands.Models.ShiftInventory", "ShiftInventory")
                        .WithMany("OrderInventories")
                        .HasForeignKey("ShiftInventoryId")
                        .HasConstraintName("FK__OrderInve__Shift__7D439ABD");

                    b.Navigation("Order");

                    b.Navigation("ShiftInventory");
                });

            modelBuilder.Entity("highlands.Models.OrderPayment", b =>
                {
                    b.HasOne("highlands.Models.Order", "Order")
                        .WithMany("OrderPayments")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderPaym__Order__6E01572D");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("highlands.Models.Recipe", b =>
                {
                    b.HasOne("highlands.Models.Ingredient", "Ingredient")
                        .WithMany("Recipes")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Recipe__Ingredie__2DE6D218");

                    b.HasOne("highlands.Models.MenuItem", "ItemNameNavigation")
                        .WithMany("Recipes")
                        .HasForeignKey("ItemName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Recipe__ItemName__2CF2ADDF");

                    b.Navigation("Ingredient");

                    b.Navigation("ItemNameNavigation");
                });

            modelBuilder.Entity("highlands.Models.Salary", b =>
                {
                    b.HasOne("highlands.Models.Employee", "Employee")
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__Salary__Employee__59063A47");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("highlands.Models.Sale", b =>
                {
                    b.HasOne("highlands.Models.Promotion", "Promotion")
                        .WithMany("Sales")
                        .HasForeignKey("PromotionId")
                        .HasConstraintName("FK__Sales__Promotion__66603565");

                    b.HasOne("highlands.Models.Store", "Store")
                        .WithMany("Sales")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK__Sales__StoreId__656C112C");

                    b.Navigation("Promotion");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("highlands.Models.Shift", b =>
                {
                    b.HasOne("highlands.Models.Employee", "Employee")
                        .WithMany("Shifts")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__Shift__EmployeeI__75A278F5");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("highlands.Models.ShiftInventory", b =>
                {
                    b.HasOne("highlands.Models.Inventory", "Inventory")
                        .WithMany("ShiftInventories")
                        .HasForeignKey("InventoryId")
                        .HasConstraintName("FK__ShiftInve__Inven__797309D9");

                    b.HasOne("highlands.Models.Shift", "Shift")
                        .WithMany("ShiftInventories")
                        .HasForeignKey("ShiftId")
                        .HasConstraintName("FK__ShiftInve__Shift__787EE5A0");

                    b.Navigation("Inventory");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("highlands.Models.StockIn", b =>
                {
                    b.HasOne("highlands.Models.Inventory", "Inventory")
                        .WithMany("StockIns")
                        .HasForeignKey("InventoryId")
                        .HasConstraintName("FK__StockIn__Invento__02084FDA");

                    b.HasOne("highlands.Models.Store", "Store")
                        .WithMany("StockIns")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK__StockIn__StoreId__02FC7413");

                    b.HasOne("highlands.Models.Supplier", "Supplier")
                        .WithMany("StockIns")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK__StockIn__Supplie__01142BA1");

                    b.Navigation("Inventory");

                    b.Navigation("Store");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("highlands.Models.StockOut", b =>
                {
                    b.HasOne("highlands.Models.Inventory", "Inventory")
                        .WithMany("StockOuts")
                        .HasForeignKey("InventoryId")
                        .HasConstraintName("FK__StockOut__Invent__71D1E811");

                    b.HasOne("highlands.Models.Store", "Store")
                        .WithMany("StockOuts")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK__StockOut__StoreI__72C60C4A");

                    b.Navigation("Inventory");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("highlands.Models.TransactionHistory", b =>
                {
                    b.HasOne("highlands.Models.Order", "Order")
                        .WithMany("TransactionHistories")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Transacti__Order__6A30C649");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("highlands.Models.User", b =>
                {
                    b.HasOne("highlands.Models.Role", "RoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Users__RoleId__3A81B327");

                    b.Navigation("RoleNavigation");
                });

            modelBuilder.Entity("highlands.Models.Employee", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Salaries");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("highlands.Models.Ingredient", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("highlands.Models.Inventory", b =>
                {
                    b.Navigation("ShiftInventories");

                    b.Navigation("StockIns");

                    b.Navigation("StockOuts");
                });

            modelBuilder.Entity("highlands.Models.Level", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("highlands.Models.MenuItem", b =>
                {
                    b.Navigation("MenuItemPrices");

                    b.Navigation("OrderDetails");

                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("highlands.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("OrderInventories");

                    b.Navigation("OrderPayments");

                    b.Navigation("TransactionHistories");
                });

            modelBuilder.Entity("highlands.Models.Promotion", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("highlands.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("highlands.Models.Shift", b =>
                {
                    b.Navigation("ShiftInventories");
                });

            modelBuilder.Entity("highlands.Models.ShiftInventory", b =>
                {
                    b.Navigation("OrderInventories");
                });

            modelBuilder.Entity("highlands.Models.Store", b =>
                {
                    b.Navigation("Sales");

                    b.Navigation("StockIns");

                    b.Navigation("StockOuts");
                });

            modelBuilder.Entity("highlands.Models.Supplier", b =>
                {
                    b.Navigation("StockIns");
                });

            modelBuilder.Entity("highlands.Models.User", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
