@model highlands.Models.DTO.ItemSelectedViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var filteredMenuItems = ViewBag.MenuItem as MenuItem;
    var availableSizes = Model.AvailableSizes ?? new List<MenuItemPrice>();
    var hasClassicSizes = availableSizes != null && availableSizes.Any(s => s.Size == "S" || s.Size == "M" || s.Size == "L");
    var hasEspressoSizes = availableSizes != null && availableSizes.Any(s => s.Size == "Single Shot" || s.Size == "Double Shot");
}
<body>
    <div class="item">
        <div class="menu-link-wrapper">
            <h3 class="menu-link">
                <a href="@Url.Action("Index", "Customer", new { area = "User" })">Menu</a> /
                @*chưa xong*@ 
                <a href="javascript:void(0);" data-subcategory="@Model.MenuItem.SubCategory">@Model.MenuItem.SubCategory</a> /
                <span class="item-name">@Model.MenuItem.ItemName</span>
            </h3>
        </div>
        <div class="item-container">
            <img class="item-img" src="@Model.MenuItem.ItemImg" alt="@Model.MenuItem.ItemName" />
            <div class="item-content">
                <a class="item-name-track">@Model.MenuItem.ItemName</a>
                @*chưa xong*@ 
                    <h3>30 Calories</h3>
            </div>
        </div>

        <div class="details-container">
            <div class="size-options">
                <h2>Size options</h2>
                <div class="size-buttons">
                    @if (hasClassicSizes)
                    {
                        @foreach (var size in availableSizes.OrderBy(s => s.Size == "S" ? 1 : s.Size == "M" ? 2 : 3))
                        {
                            <button class="size-button @(size.Size == "S" ? "small" : size.Size == "M" ? "medium" : "large")"
                                    data-size="@size.Size"
                                    data-name="@Model.MenuItem.ItemName">
                                <img src="~/img/cup.png" alt="@size.Size">
                                <span class="size-label">@size.Size</span>
                                <span class="size-description">
                                    @(size.Size == "S" ? "12 fl oz" : size.Size == "M" ? "16 fl oz" : "20 fl oz")
                                </span>
                            </button>
                        }
                    }
                    else if (hasEspressoSizes)
                    {
                        @foreach (var size in availableSizes.OrderBy(s => s.Size == "Double Shot"))
                        {
                            if (size.Size == "Single Shot")
                            {
                                <button class="size-button medium" data-size="@size.Size" data-name="@Model.MenuItem.ItemName">
                                    <img src="~/img/cup.png" alt="Single Shot">
                                    <span class="size-label">Single Shot</span>
                                    <span class="size-description">16 fl oz</span>
                                </button>
                            }
                        }
                        @foreach (var size in availableSizes.Where(s => s.Size == "Double Shot"))
                        {
                            <button class="size-button large" data-size="@size.Size" data-name="@Model.MenuItem.ItemName">
                                <img src="~/img/cup.png" alt="Double Shot">
                                <span class="size-label">Double Shot</span>
                                <span class="size-description">20 fl oz</span>
                            </button>
                        }
                    }
                </div>
                <div class="store-availability">
                    <i class="fa-solid fa-location-dot"></i>
                    <a href="#">Select a store to view availability</a>
                </div>
            </div>
            <div class="included-options">
                <h2 id="includedTitle">What's included</h2>
                <div class="ingredients-container">
                    @*load lên size M lúc đầu*@
                    @await Html.PartialAsync("~/Views/User/Customer/_RecipePartial.cshtml", Model.RecipeList)
                </div>

            </div>

        </div>
        <button id="addToOrderBtn" class="btn-add-to-order">Add to Order</button>
    </div>

</body>
<link rel="stylesheet" href="~/css/customer/selected.css?v=@DateTime.Now.Ticks">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://kit.fontawesome.com/a6ec772266.js" crossorigin="anonymous"></script>
<script src="/js/CustomerJS/itemSelected.js" defer></script>
